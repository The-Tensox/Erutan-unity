// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: realtime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Erutan.Scripts.Protos {

  /// <summary>Holder for reflection information generated from realtime.proto</summary>
  public static partial class RealtimeReflection {

    #region Descriptor
    /// <summary>File descriptor for realtime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RealtimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5yZWFsdGltZS5wcm90bxIGZXJ1dGFuGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIjkKCE1ldGFkYXRhEi0KCXRpbWVzdGFtcBgBIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiLQoKTmV0VmVjdG9yMxIJCgF4",
            "GAEgASgBEgkKAXkYAiABKAESCQoBehgDIAEoASIiCgpOZXRWZWN0b3IyEgkK",
            "AXgYASABKAESCQoBeRgCIAEoASI7Cg1OZXRRdWF0ZXJuaW9uEgkKAXgYASAB",
            "KAESCQoBeRgCIAEoARIJCgF6GAMgASgBEgkKAXcYBCABKAEisQcKCUNvbXBv",
            "bmVudBIxCgVzcGFjZRgBIAEoCzIgLmVydXRhbi5Db21wb25lbnQuU3BhY2VD",
            "b21wb25lbnRIABI6CgpzcGFjZV90aW1lGAIgASgLMiQuZXJ1dGFuLkNvbXBv",
            "bmVudC5TcGFjZVRpbWVDb21wb25lbnRIABIzCgZoZWFsdGgYAyABKAsyIS5l",
            "cnV0YW4uQ29tcG9uZW50LkhlYWx0aENvbXBvbmVudEgAEjEKBXNwZWVkGAQg",
            "ASgLMiAuZXJ1dGFuLkNvbXBvbmVudC5TcGVlZENvbXBvbmVudEgAEjMKBnJl",
            "bmRlchgFIAEoCzIhLmVydXRhbi5Db21wb25lbnQuUmVuZGVyQ29tcG9uZW50",
            "SAASQgoOYmVoYXZpb3VyX3R5cGUYBiABKAsyKC5lcnV0YW4uQ29tcG9uZW50",
            "LkJlaGF2aW91clR5cGVDb21wb25lbnRIABqCAQoOU3BhY2VDb21wb25lbnQS",
            "JAoIcG9zaXRpb24YASABKAsyEi5lcnV0YW4uTmV0VmVjdG9yMxInCghyb3Rh",
            "dGlvbhgCIAEoCzIVLmVydXRhbi5OZXRRdWF0ZXJuaW9uEiEKBXNjYWxlGAMg",
            "ASgLMhIuZXJ1dGFuLk5ldFZlY3RvcjMadAoSU3BhY2VUaW1lQ29tcG9uZW50",
            "Ei0KCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASLwoFc3BhY2UYAiABKAsyIC5lcnV0YW4uQ29tcG9uZW50LlNwYWNlQ29t",
            "cG9uZW50Gh8KD0hlYWx0aENvbXBvbmVudBIMCgRsaWZlGAEgASgBGiQKDlNw",
            "ZWVkQ29tcG9uZW50EhIKCm1vdmVfc3BlZWQYASABKAEaNQoPVGFyZ2V0Q29t",
            "cG9uZW50EiIKBnRhcmdldBgBIAEoCzISLmVydXRhbi5OZXRWZWN0b3IzGjsK",
            "D1JlbmRlckNvbXBvbmVudBILCgNyZWQYASABKAISDQoFZ3JlZW4YAiABKAIS",
            "DAoEYmx1ZRgDIAEoAhqVAQoWQmVoYXZpb3VyVHlwZUNvbXBvbmVudBJOCg5i",
            "ZWhhdmlvdXJfdHlwZRgBIAEoDjI2LmVydXRhbi5Db21wb25lbnQuQmVoYXZp",
            "b3VyVHlwZUNvbXBvbmVudC5CZWhhdmlvdXJUeXBlIisKDUJlaGF2aW91clR5",
            "cGUSCgoGQU5JTUFMEAASDgoKVkVHRVRBVElPThABQgYKBHR5cGUimwgKBlBh",
            "Y2tldBIiCghtZXRhZGF0YRgBIAEoCzIQLmVydXRhbi5NZXRhZGF0YRI6Cg1j",
            "cmVhdGVfZW50aXR5GAIgASgLMiEuZXJ1dGFuLlBhY2tldC5DcmVhdGVFbnRp",
            "dHlQYWNrZXRIABI6Cg11cGRhdGVfZW50aXR5GAMgASgLMiEuZXJ1dGFuLlBh",
            "Y2tldC5VcGRhdGVFbnRpdHlQYWNrZXRIABI+Cg91cGRhdGVfcG9zaXRpb24Y",
            "BCABKAsyIy5lcnV0YW4uUGFja2V0LlVwZGF0ZVBvc2l0aW9uUGFja2V0SAAS",
            "PgoPdXBkYXRlX3JvdGF0aW9uGAUgASgLMiMuZXJ1dGFuLlBhY2tldC5VcGRh",
            "dGVSb3RhdGlvblBhY2tldEgAEjwKDmRlc3Ryb3lfZW50aXR5GAYgASgLMiIu",
            "ZXJ1dGFuLlBhY2tldC5EZXN0cm95RW50aXR5UGFja2V0SAASOgoNdXBkYXRl",
            "X2FuaW1hbBgHIAEoCzIhLmVydXRhbi5QYWNrZXQuVXBkYXRlQW5pbWFsUGFj",
            "a2V0SAASQgoRdXBkYXRlX3BhcmFtZXRlcnMYCCABKAsyJS5lcnV0YW4uUGFj",
            "a2V0LlVwZGF0ZVBhcmFtZXRlcnNQYWNrZXRIABpOChJDcmVhdGVFbnRpdHlQ",
            "YWNrZXQSEQoJZW50aXR5X2lkGAEgASgEEiUKCmNvbXBvbmVudHMYAiADKAsy",
            "ES5lcnV0YW4uQ29tcG9uZW50Gk4KElVwZGF0ZUVudGl0eVBhY2tldBIRCgll",
            "bnRpdHlfaWQYASABKAQSJQoKY29tcG9uZW50cxgCIAMoCzIRLmVydXRhbi5D",
            "b21wb25lbnQaTwoUVXBkYXRlUG9zaXRpb25QYWNrZXQSEQoJZW50aXR5X2lk",
            "GAEgASgEEiQKCHBvc2l0aW9uGAIgASgLMhIuZXJ1dGFuLk5ldFZlY3RvcjMa",
            "UgoUVXBkYXRlUm90YXRpb25QYWNrZXQSEQoJZW50aXR5X2lkGAEgASgEEicK",
            "CHJvdGF0aW9uGAIgASgLMhUuZXJ1dGFuLk5ldFF1YXRlcm5pb24aKAoTRGVz",
            "dHJveUVudGl0eVBhY2tldBIRCgllbnRpdHlfaWQYASABKAQaNQoSVXBkYXRl",
            "QW5pbWFsUGFja2V0EhEKCWVudGl0eV9pZBgBIAEoBBIMCgRsaWZlGAIgASgB",
            "GogBChZVcGRhdGVQYXJhbWV0ZXJzUGFja2V0EkMKCnBhcmFtZXRlcnMYASAD",
            "KAsyLy5lcnV0YW4uUGFja2V0LlVwZGF0ZVBhcmFtZXRlcnNQYWNrZXQuUGFy",
            "YW1ldGVyGikKCVBhcmFtZXRlchIUCgp0aW1lX3NjYWxlGAEgASgBSABCBgoE",
            "dHlwZUIGCgR0eXBlMjgKBkVydXRhbhIuCgZTdHJlYW0SDi5lcnV0YW4uUGFj",
            "a2V0Gg4uZXJ1dGFuLlBhY2tldCIAKAEwAUIuCgpjb20uZXJ1dGFuQgZFcnV0",
            "YW5QAaoCFUVydXRhbi5TY3JpcHRzLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Metadata), global::Erutan.Scripts.Protos.Metadata.Parser, new[]{ "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetVector3), global::Erutan.Scripts.Protos.NetVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetVector2), global::Erutan.Scripts.Protos.NetVector2.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetQuaternion), global::Erutan.Scripts.Protos.NetQuaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component), global::Erutan.Scripts.Protos.Component.Parser, new[]{ "Space", "SpaceTime", "Health", "Speed", "Render", "BehaviourType" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.SpaceComponent), global::Erutan.Scripts.Protos.Component.Types.SpaceComponent.Parser, new[]{ "Position", "Rotation", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent), global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent.Parser, new[]{ "Timestamp", "Space" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.HealthComponent), global::Erutan.Scripts.Protos.Component.Types.HealthComponent.Parser, new[]{ "Life" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.SpeedComponent), global::Erutan.Scripts.Protos.Component.Types.SpeedComponent.Parser, new[]{ "MoveSpeed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.TargetComponent), global::Erutan.Scripts.Protos.Component.Types.TargetComponent.Parser, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.RenderComponent), global::Erutan.Scripts.Protos.Component.Types.RenderComponent.Parser, new[]{ "Red", "Green", "Blue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent), global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent.Parser, new[]{ "BehaviourType" }, null, new[]{ typeof(global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent.Types.BehaviourType) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet), global::Erutan.Scripts.Protos.Packet.Parser, new[]{ "Metadata", "CreateEntity", "UpdateEntity", "UpdatePosition", "UpdateRotation", "DestroyEntity", "UpdateAnimal", "UpdateParameters" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket), global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket.Parser, new[]{ "EntityId", "Components" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket.Parser, new[]{ "EntityId", "Components" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket.Parser, new[]{ "EntityId", "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket.Parser, new[]{ "EntityId", "Rotation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket), global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket.Parser, new[]{ "EntityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket.Parser, new[]{ "EntityId", "Life" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Parser, new[]{ "Parameters" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter), global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter.Parser, new[]{ "TimeScale" }, new[]{ "Type" }, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetVector3 : pb::IMessage<NetVector3> {
    private static readonly pb::MessageParser<NetVector3> _parser = new pb::MessageParser<NetVector3>(() => new NetVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3(NetVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3 Clone() {
      return new NetVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetVector2 : pb::IMessage<NetVector2> {
    private static readonly pb::MessageParser<NetVector2> _parser = new pb::MessageParser<NetVector2>(() => new NetVector2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetVector2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector2(NetVector2 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector2 Clone() {
      return new NetVector2(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetVector2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetVector2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetVector2 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetQuaternion : pb::IMessage<NetQuaternion> {
    private static readonly pb::MessageParser<NetQuaternion> _parser = new pb::MessageParser<NetQuaternion>(() => new NetQuaternion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetQuaternion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion(NetQuaternion other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion Clone() {
      return new NetQuaternion(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private double w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetQuaternion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetQuaternion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (W != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (W != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (W != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetQuaternion other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      if (other.W != 0D) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
          case 33: {
            W = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Data-oriented design like
  /// </summary>
  public sealed partial class Component : pb::IMessage<Component> {
    private static readonly pb::MessageParser<Component> _parser = new pb::MessageParser<Component>(() => new Component());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Component> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component(Component other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Space:
          Space = other.Space.Clone();
          break;
        case TypeOneofCase.SpaceTime:
          SpaceTime = other.SpaceTime.Clone();
          break;
        case TypeOneofCase.Health:
          Health = other.Health.Clone();
          break;
        case TypeOneofCase.Speed:
          Speed = other.Speed.Clone();
          break;
        case TypeOneofCase.Render:
          Render = other.Render.Clone();
          break;
        case TypeOneofCase.BehaviourType:
          BehaviourType = other.BehaviourType.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component Clone() {
      return new Component(this);
    }

    /// <summary>Field number for the "space" field.</summary>
    public const int SpaceFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.SpaceComponent Space {
      get { return typeCase_ == TypeOneofCase.Space ? (global::Erutan.Scripts.Protos.Component.Types.SpaceComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Space;
      }
    }

    /// <summary>Field number for the "space_time" field.</summary>
    public const int SpaceTimeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent SpaceTime {
      get { return typeCase_ == TypeOneofCase.SpaceTime ? (global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.SpaceTime;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.HealthComponent Health {
      get { return typeCase_ == TypeOneofCase.Health ? (global::Erutan.Scripts.Protos.Component.Types.HealthComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Health;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.SpeedComponent Speed {
      get { return typeCase_ == TypeOneofCase.Speed ? (global::Erutan.Scripts.Protos.Component.Types.SpeedComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Speed;
      }
    }

    /// <summary>Field number for the "render" field.</summary>
    public const int RenderFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.RenderComponent Render {
      get { return typeCase_ == TypeOneofCase.Render ? (global::Erutan.Scripts.Protos.Component.Types.RenderComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Render;
      }
    }

    /// <summary>Field number for the "behaviour_type" field.</summary>
    public const int BehaviourTypeFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent BehaviourType {
      get { return typeCase_ == TypeOneofCase.BehaviourType ? (global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.BehaviourType;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Space = 1,
      SpaceTime = 2,
      Health = 3,
      Speed = 4,
      Render = 5,
      BehaviourType = 6,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Component);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Component other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Space, other.Space)) return false;
      if (!object.Equals(SpaceTime, other.SpaceTime)) return false;
      if (!object.Equals(Health, other.Health)) return false;
      if (!object.Equals(Speed, other.Speed)) return false;
      if (!object.Equals(Render, other.Render)) return false;
      if (!object.Equals(BehaviourType, other.BehaviourType)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Space) hash ^= Space.GetHashCode();
      if (typeCase_ == TypeOneofCase.SpaceTime) hash ^= SpaceTime.GetHashCode();
      if (typeCase_ == TypeOneofCase.Health) hash ^= Health.GetHashCode();
      if (typeCase_ == TypeOneofCase.Speed) hash ^= Speed.GetHashCode();
      if (typeCase_ == TypeOneofCase.Render) hash ^= Render.GetHashCode();
      if (typeCase_ == TypeOneofCase.BehaviourType) hash ^= BehaviourType.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Space) {
        output.WriteRawTag(10);
        output.WriteMessage(Space);
      }
      if (typeCase_ == TypeOneofCase.SpaceTime) {
        output.WriteRawTag(18);
        output.WriteMessage(SpaceTime);
      }
      if (typeCase_ == TypeOneofCase.Health) {
        output.WriteRawTag(26);
        output.WriteMessage(Health);
      }
      if (typeCase_ == TypeOneofCase.Speed) {
        output.WriteRawTag(34);
        output.WriteMessage(Speed);
      }
      if (typeCase_ == TypeOneofCase.Render) {
        output.WriteRawTag(42);
        output.WriteMessage(Render);
      }
      if (typeCase_ == TypeOneofCase.BehaviourType) {
        output.WriteRawTag(50);
        output.WriteMessage(BehaviourType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Space) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Space);
      }
      if (typeCase_ == TypeOneofCase.SpaceTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpaceTime);
      }
      if (typeCase_ == TypeOneofCase.Health) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Health);
      }
      if (typeCase_ == TypeOneofCase.Speed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Speed);
      }
      if (typeCase_ == TypeOneofCase.Render) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Render);
      }
      if (typeCase_ == TypeOneofCase.BehaviourType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BehaviourType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Component other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Space:
          if (Space == null) {
            Space = new global::Erutan.Scripts.Protos.Component.Types.SpaceComponent();
          }
          Space.MergeFrom(other.Space);
          break;
        case TypeOneofCase.SpaceTime:
          if (SpaceTime == null) {
            SpaceTime = new global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent();
          }
          SpaceTime.MergeFrom(other.SpaceTime);
          break;
        case TypeOneofCase.Health:
          if (Health == null) {
            Health = new global::Erutan.Scripts.Protos.Component.Types.HealthComponent();
          }
          Health.MergeFrom(other.Health);
          break;
        case TypeOneofCase.Speed:
          if (Speed == null) {
            Speed = new global::Erutan.Scripts.Protos.Component.Types.SpeedComponent();
          }
          Speed.MergeFrom(other.Speed);
          break;
        case TypeOneofCase.Render:
          if (Render == null) {
            Render = new global::Erutan.Scripts.Protos.Component.Types.RenderComponent();
          }
          Render.MergeFrom(other.Render);
          break;
        case TypeOneofCase.BehaviourType:
          if (BehaviourType == null) {
            BehaviourType = new global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent();
          }
          BehaviourType.MergeFrom(other.BehaviourType);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Erutan.Scripts.Protos.Component.Types.SpaceComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.SpaceComponent();
            if (typeCase_ == TypeOneofCase.Space) {
              subBuilder.MergeFrom(Space);
            }
            input.ReadMessage(subBuilder);
            Space = subBuilder;
            break;
          }
          case 18: {
            global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.SpaceTimeComponent();
            if (typeCase_ == TypeOneofCase.SpaceTime) {
              subBuilder.MergeFrom(SpaceTime);
            }
            input.ReadMessage(subBuilder);
            SpaceTime = subBuilder;
            break;
          }
          case 26: {
            global::Erutan.Scripts.Protos.Component.Types.HealthComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.HealthComponent();
            if (typeCase_ == TypeOneofCase.Health) {
              subBuilder.MergeFrom(Health);
            }
            input.ReadMessage(subBuilder);
            Health = subBuilder;
            break;
          }
          case 34: {
            global::Erutan.Scripts.Protos.Component.Types.SpeedComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.SpeedComponent();
            if (typeCase_ == TypeOneofCase.Speed) {
              subBuilder.MergeFrom(Speed);
            }
            input.ReadMessage(subBuilder);
            Speed = subBuilder;
            break;
          }
          case 42: {
            global::Erutan.Scripts.Protos.Component.Types.RenderComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.RenderComponent();
            if (typeCase_ == TypeOneofCase.Render) {
              subBuilder.MergeFrom(Render);
            }
            input.ReadMessage(subBuilder);
            Render = subBuilder;
            break;
          }
          case 50: {
            global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent();
            if (typeCase_ == TypeOneofCase.BehaviourType) {
              subBuilder.MergeFrom(BehaviourType);
            }
            input.ReadMessage(subBuilder);
            BehaviourType = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Component message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class SpaceComponent : pb::IMessage<SpaceComponent> {
        private static readonly pb::MessageParser<SpaceComponent> _parser = new pb::MessageParser<SpaceComponent>(() => new SpaceComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SpaceComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceComponent(SpaceComponent other) : this() {
          position_ = other.position_ != null ? other.position_.Clone() : null;
          rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
          scale_ = other.scale_ != null ? other.scale_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceComponent Clone() {
          return new SpaceComponent(this);
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 1;
        private global::Erutan.Scripts.Protos.NetVector3 position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetVector3 Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        /// <summary>Field number for the "rotation" field.</summary>
        public const int RotationFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetQuaternion rotation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetQuaternion Rotation {
          get { return rotation_; }
          set {
            rotation_ = value;
          }
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 3;
        private global::Erutan.Scripts.Protos.NetVector3 scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetVector3 Scale {
          get { return scale_; }
          set {
            scale_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SpaceComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SpaceComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Position, other.Position)) return false;
          if (!object.Equals(Rotation, other.Rotation)) return false;
          if (!object.Equals(Scale, other.Scale)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (position_ != null) hash ^= Position.GetHashCode();
          if (rotation_ != null) hash ^= Rotation.GetHashCode();
          if (scale_ != null) hash ^= Scale.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (position_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Position);
          }
          if (rotation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rotation);
          }
          if (scale_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Scale);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (position_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
          }
          if (rotation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
          }
          if (scale_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SpaceComponent other) {
          if (other == null) {
            return;
          }
          if (other.position_ != null) {
            if (position_ == null) {
              Position = new global::Erutan.Scripts.Protos.NetVector3();
            }
            Position.MergeFrom(other.Position);
          }
          if (other.rotation_ != null) {
            if (rotation_ == null) {
              Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
            }
            Rotation.MergeFrom(other.Rotation);
          }
          if (other.scale_ != null) {
            if (scale_ == null) {
              Scale = new global::Erutan.Scripts.Protos.NetVector3();
            }
            Scale.MergeFrom(other.Scale);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (position_ == null) {
                  Position = new global::Erutan.Scripts.Protos.NetVector3();
                }
                input.ReadMessage(Position);
                break;
              }
              case 18: {
                if (rotation_ == null) {
                  Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
                }
                input.ReadMessage(Rotation);
                break;
              }
              case 26: {
                if (scale_ == null) {
                  Scale = new global::Erutan.Scripts.Protos.NetVector3();
                }
                input.ReadMessage(Scale);
                break;
              }
            }
          }
        }

      }

      public sealed partial class SpaceTimeComponent : pb::IMessage<SpaceTimeComponent> {
        private static readonly pb::MessageParser<SpaceTimeComponent> _parser = new pb::MessageParser<SpaceTimeComponent>(() => new SpaceTimeComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SpaceTimeComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceTimeComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceTimeComponent(SpaceTimeComponent other) : this() {
          timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
          space_ = other.space_ != null ? other.space_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpaceTimeComponent Clone() {
          return new SpaceTimeComponent(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "space" field.</summary>
        public const int SpaceFieldNumber = 2;
        private global::Erutan.Scripts.Protos.Component.Types.SpaceComponent space_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.Component.Types.SpaceComponent Space {
          get { return space_; }
          set {
            space_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SpaceTimeComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SpaceTimeComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Timestamp, other.Timestamp)) return false;
          if (!object.Equals(Space, other.Space)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
          if (space_ != null) hash ^= Space.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (timestamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Timestamp);
          }
          if (space_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Space);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (timestamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
          }
          if (space_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Space);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SpaceTimeComponent other) {
          if (other == null) {
            return;
          }
          if (other.timestamp_ != null) {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Timestamp.MergeFrom(other.Timestamp);
          }
          if (other.space_ != null) {
            if (space_ == null) {
              Space = new global::Erutan.Scripts.Protos.Component.Types.SpaceComponent();
            }
            Space.MergeFrom(other.Space);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (timestamp_ == null) {
                  Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Timestamp);
                break;
              }
              case 18: {
                if (space_ == null) {
                  Space = new global::Erutan.Scripts.Protos.Component.Types.SpaceComponent();
                }
                input.ReadMessage(Space);
                break;
              }
            }
          }
        }

      }

      public sealed partial class HealthComponent : pb::IMessage<HealthComponent> {
        private static readonly pb::MessageParser<HealthComponent> _parser = new pb::MessageParser<HealthComponent>(() => new HealthComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HealthComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HealthComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HealthComponent(HealthComponent other) : this() {
          life_ = other.life_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HealthComponent Clone() {
          return new HealthComponent(this);
        }

        /// <summary>Field number for the "life" field.</summary>
        public const int LifeFieldNumber = 1;
        private double life_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Life {
          get { return life_; }
          set {
            life_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HealthComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HealthComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Life, other.Life)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Life != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Life);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Life != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Life);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Life != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HealthComponent other) {
          if (other == null) {
            return;
          }
          if (other.Life != 0D) {
            Life = other.Life;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Life = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

      public sealed partial class SpeedComponent : pb::IMessage<SpeedComponent> {
        private static readonly pb::MessageParser<SpeedComponent> _parser = new pb::MessageParser<SpeedComponent>(() => new SpeedComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SpeedComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpeedComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpeedComponent(SpeedComponent other) : this() {
          moveSpeed_ = other.moveSpeed_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SpeedComponent Clone() {
          return new SpeedComponent(this);
        }

        /// <summary>Field number for the "move_speed" field.</summary>
        public const int MoveSpeedFieldNumber = 1;
        private double moveSpeed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double MoveSpeed {
          get { return moveSpeed_; }
          set {
            moveSpeed_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SpeedComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SpeedComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MoveSpeed, other.MoveSpeed)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MoveSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MoveSpeed);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (MoveSpeed != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(MoveSpeed);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MoveSpeed != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SpeedComponent other) {
          if (other == null) {
            return;
          }
          if (other.MoveSpeed != 0D) {
            MoveSpeed = other.MoveSpeed;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                MoveSpeed = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

      public sealed partial class TargetComponent : pb::IMessage<TargetComponent> {
        private static readonly pb::MessageParser<TargetComponent> _parser = new pb::MessageParser<TargetComponent>(() => new TargetComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TargetComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetComponent(TargetComponent other) : this() {
          target_ = other.target_ != null ? other.target_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TargetComponent Clone() {
          return new TargetComponent(this);
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 1;
        private global::Erutan.Scripts.Protos.NetVector3 target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetVector3 Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TargetComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TargetComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Target, other.Target)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (target_ != null) hash ^= Target.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (target_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Target);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TargetComponent other) {
          if (other == null) {
            return;
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::Erutan.Scripts.Protos.NetVector3();
            }
            Target.MergeFrom(other.Target);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (target_ == null) {
                  Target = new global::Erutan.Scripts.Protos.NetVector3();
                }
                input.ReadMessage(Target);
                break;
              }
            }
          }
        }

      }

      public sealed partial class RenderComponent : pb::IMessage<RenderComponent> {
        private static readonly pb::MessageParser<RenderComponent> _parser = new pb::MessageParser<RenderComponent>(() => new RenderComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RenderComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RenderComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RenderComponent(RenderComponent other) : this() {
          red_ = other.red_;
          green_ = other.green_;
          blue_ = other.blue_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RenderComponent Clone() {
          return new RenderComponent(this);
        }

        /// <summary>Field number for the "red" field.</summary>
        public const int RedFieldNumber = 1;
        private float red_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Red {
          get { return red_; }
          set {
            red_ = value;
          }
        }

        /// <summary>Field number for the "green" field.</summary>
        public const int GreenFieldNumber = 2;
        private float green_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Green {
          get { return green_; }
          set {
            green_ = value;
          }
        }

        /// <summary>Field number for the "blue" field.</summary>
        public const int BlueFieldNumber = 3;
        private float blue_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Blue {
          get { return blue_; }
          set {
            blue_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RenderComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RenderComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Red, other.Red)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Green, other.Green)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Blue, other.Blue)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Red != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Red);
          if (Green != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Green);
          if (Blue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Blue);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Red != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Red);
          }
          if (Green != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Green);
          }
          if (Blue != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Blue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Red != 0F) {
            size += 1 + 4;
          }
          if (Green != 0F) {
            size += 1 + 4;
          }
          if (Blue != 0F) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RenderComponent other) {
          if (other == null) {
            return;
          }
          if (other.Red != 0F) {
            Red = other.Red;
          }
          if (other.Green != 0F) {
            Green = other.Green;
          }
          if (other.Blue != 0F) {
            Blue = other.Blue;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Red = input.ReadFloat();
                break;
              }
              case 21: {
                Green = input.ReadFloat();
                break;
              }
              case 29: {
                Blue = input.ReadFloat();
                break;
              }
            }
          }
        }

      }

      public sealed partial class BehaviourTypeComponent : pb::IMessage<BehaviourTypeComponent> {
        private static readonly pb::MessageParser<BehaviourTypeComponent> _parser = new pb::MessageParser<BehaviourTypeComponent>(() => new BehaviourTypeComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BehaviourTypeComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BehaviourTypeComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BehaviourTypeComponent(BehaviourTypeComponent other) : this() {
          behaviourType_ = other.behaviourType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BehaviourTypeComponent Clone() {
          return new BehaviourTypeComponent(this);
        }

        /// <summary>Field number for the "behaviour_type" field.</summary>
        public const int BehaviourTypeFieldNumber = 1;
        private global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent.Types.BehaviourType behaviourType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent.Types.BehaviourType BehaviourType {
          get { return behaviourType_; }
          set {
            behaviourType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BehaviourTypeComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BehaviourTypeComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BehaviourType != other.BehaviourType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BehaviourType != 0) hash ^= BehaviourType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (BehaviourType != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) BehaviourType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BehaviourType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BehaviourType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BehaviourTypeComponent other) {
          if (other == null) {
            return;
          }
          if (other.BehaviourType != 0) {
            BehaviourType = other.BehaviourType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                BehaviourType = (global::Erutan.Scripts.Protos.Component.Types.BehaviourTypeComponent.Types.BehaviourType) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the BehaviourTypeComponent message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum BehaviourType {
            [pbr::OriginalName("ANIMAL")] Animal = 0,
            [pbr::OriginalName("VEGETATION")] Vegetation = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class Packet : pb::IMessage<Packet> {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.CreateEntity:
          CreateEntity = other.CreateEntity.Clone();
          break;
        case TypeOneofCase.UpdateEntity:
          UpdateEntity = other.UpdateEntity.Clone();
          break;
        case TypeOneofCase.UpdatePosition:
          UpdatePosition = other.UpdatePosition.Clone();
          break;
        case TypeOneofCase.UpdateRotation:
          UpdateRotation = other.UpdateRotation.Clone();
          break;
        case TypeOneofCase.DestroyEntity:
          DestroyEntity = other.DestroyEntity.Clone();
          break;
        case TypeOneofCase.UpdateAnimal:
          UpdateAnimal = other.UpdateAnimal.Clone();
          break;
        case TypeOneofCase.UpdateParameters:
          UpdateParameters = other.UpdateParameters.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::Erutan.Scripts.Protos.Metadata metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "create_entity" field.</summary>
    public const int CreateEntityFieldNumber = 2;
    /// <summary>
    /// General physical entitys
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket CreateEntity {
      get { return typeCase_ == TypeOneofCase.CreateEntity ? (global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.CreateEntity;
      }
    }

    /// <summary>Field number for the "update_entity" field.</summary>
    public const int UpdateEntityFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket UpdateEntity {
      get { return typeCase_ == TypeOneofCase.UpdateEntity ? (global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateEntity;
      }
    }

    /// <summary>Field number for the "update_position" field.</summary>
    public const int UpdatePositionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket UpdatePosition {
      get { return typeCase_ == TypeOneofCase.UpdatePosition ? (global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdatePosition;
      }
    }

    /// <summary>Field number for the "update_rotation" field.</summary>
    public const int UpdateRotationFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket UpdateRotation {
      get { return typeCase_ == TypeOneofCase.UpdateRotation ? (global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateRotation;
      }
    }

    /// <summary>Field number for the "destroy_entity" field.</summary>
    public const int DestroyEntityFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket DestroyEntity {
      get { return typeCase_ == TypeOneofCase.DestroyEntity ? (global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DestroyEntity;
      }
    }

    /// <summary>Field number for the "update_animal" field.</summary>
    public const int UpdateAnimalFieldNumber = 7;
    /// <summary>
    /// Animals &amp; Environment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket UpdateAnimal {
      get { return typeCase_ == TypeOneofCase.UpdateAnimal ? (global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateAnimal;
      }
    }

    /// <summary>Field number for the "update_parameters" field.</summary>
    public const int UpdateParametersFieldNumber = 8;
    /// <summary>
    /// Server general
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket UpdateParameters {
      get { return typeCase_ == TypeOneofCase.UpdateParameters ? (global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateParameters;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      CreateEntity = 2,
      UpdateEntity = 3,
      UpdatePosition = 4,
      UpdateRotation = 5,
      DestroyEntity = 6,
      UpdateAnimal = 7,
      UpdateParameters = 8,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(CreateEntity, other.CreateEntity)) return false;
      if (!object.Equals(UpdateEntity, other.UpdateEntity)) return false;
      if (!object.Equals(UpdatePosition, other.UpdatePosition)) return false;
      if (!object.Equals(UpdateRotation, other.UpdateRotation)) return false;
      if (!object.Equals(DestroyEntity, other.DestroyEntity)) return false;
      if (!object.Equals(UpdateAnimal, other.UpdateAnimal)) return false;
      if (!object.Equals(UpdateParameters, other.UpdateParameters)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (typeCase_ == TypeOneofCase.CreateEntity) hash ^= CreateEntity.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateEntity) hash ^= UpdateEntity.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdatePosition) hash ^= UpdatePosition.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateRotation) hash ^= UpdateRotation.GetHashCode();
      if (typeCase_ == TypeOneofCase.DestroyEntity) hash ^= DestroyEntity.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateAnimal) hash ^= UpdateAnimal.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateParameters) hash ^= UpdateParameters.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (typeCase_ == TypeOneofCase.CreateEntity) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdateEntity) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyEntity) {
        output.WriteRawTag(50);
        output.WriteMessage(DestroyEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdateAnimal) {
        output.WriteRawTag(58);
        output.WriteMessage(UpdateAnimal);
      }
      if (typeCase_ == TypeOneofCase.UpdateParameters) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateParameters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (typeCase_ == TypeOneofCase.CreateEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdateEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyEntity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyEntity);
      }
      if (typeCase_ == TypeOneofCase.UpdateAnimal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAnimal);
      }
      if (typeCase_ == TypeOneofCase.UpdateParameters) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParameters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Erutan.Scripts.Protos.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.CreateEntity:
          if (CreateEntity == null) {
            CreateEntity = new global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket();
          }
          CreateEntity.MergeFrom(other.CreateEntity);
          break;
        case TypeOneofCase.UpdateEntity:
          if (UpdateEntity == null) {
            UpdateEntity = new global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket();
          }
          UpdateEntity.MergeFrom(other.UpdateEntity);
          break;
        case TypeOneofCase.UpdatePosition:
          if (UpdatePosition == null) {
            UpdatePosition = new global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket();
          }
          UpdatePosition.MergeFrom(other.UpdatePosition);
          break;
        case TypeOneofCase.UpdateRotation:
          if (UpdateRotation == null) {
            UpdateRotation = new global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket();
          }
          UpdateRotation.MergeFrom(other.UpdateRotation);
          break;
        case TypeOneofCase.DestroyEntity:
          if (DestroyEntity == null) {
            DestroyEntity = new global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket();
          }
          DestroyEntity.MergeFrom(other.DestroyEntity);
          break;
        case TypeOneofCase.UpdateAnimal:
          if (UpdateAnimal == null) {
            UpdateAnimal = new global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket();
          }
          UpdateAnimal.MergeFrom(other.UpdateAnimal);
          break;
        case TypeOneofCase.UpdateParameters:
          if (UpdateParameters == null) {
            UpdateParameters = new global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket();
          }
          UpdateParameters.MergeFrom(other.UpdateParameters);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::Erutan.Scripts.Protos.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.CreateEntityPacket();
            if (typeCase_ == TypeOneofCase.CreateEntity) {
              subBuilder.MergeFrom(CreateEntity);
            }
            input.ReadMessage(subBuilder);
            CreateEntity = subBuilder;
            break;
          }
          case 26: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdateEntityPacket();
            if (typeCase_ == TypeOneofCase.UpdateEntity) {
              subBuilder.MergeFrom(UpdateEntity);
            }
            input.ReadMessage(subBuilder);
            UpdateEntity = subBuilder;
            break;
          }
          case 34: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket();
            if (typeCase_ == TypeOneofCase.UpdatePosition) {
              subBuilder.MergeFrom(UpdatePosition);
            }
            input.ReadMessage(subBuilder);
            UpdatePosition = subBuilder;
            break;
          }
          case 42: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket();
            if (typeCase_ == TypeOneofCase.UpdateRotation) {
              subBuilder.MergeFrom(UpdateRotation);
            }
            input.ReadMessage(subBuilder);
            UpdateRotation = subBuilder;
            break;
          }
          case 50: {
            global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.DestroyEntityPacket();
            if (typeCase_ == TypeOneofCase.DestroyEntity) {
              subBuilder.MergeFrom(DestroyEntity);
            }
            input.ReadMessage(subBuilder);
            DestroyEntity = subBuilder;
            break;
          }
          case 58: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdateAnimalPacket();
            if (typeCase_ == TypeOneofCase.UpdateAnimal) {
              subBuilder.MergeFrom(UpdateAnimal);
            }
            input.ReadMessage(subBuilder);
            UpdateAnimal = subBuilder;
            break;
          }
          case 66: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket();
            if (typeCase_ == TypeOneofCase.UpdateParameters) {
              subBuilder.MergeFrom(UpdateParameters);
            }
            input.ReadMessage(subBuilder);
            UpdateParameters = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Packet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CreateEntityPacket : pb::IMessage<CreateEntityPacket> {
        private static readonly pb::MessageParser<CreateEntityPacket> _parser = new pb::MessageParser<CreateEntityPacket>(() => new CreateEntityPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreateEntityPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateEntityPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateEntityPacket(CreateEntityPacket other) : this() {
          entityId_ = other.entityId_;
          components_ = other.components_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateEntityPacket Clone() {
          return new CreateEntityPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        /// <summary>Field number for the "components" field.</summary>
        public const int ComponentsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Erutan.Scripts.Protos.Component> _repeated_components_codec
            = pb::FieldCodec.ForMessage(18, global::Erutan.Scripts.Protos.Component.Parser);
        private readonly pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> components_ = new pbc::RepeatedField<global::Erutan.Scripts.Protos.Component>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> Components {
          get { return components_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreateEntityPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreateEntityPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if(!components_.Equals(other.components_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          hash ^= components_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          components_.WriteTo(output, _repeated_components_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          size += components_.CalculateSize(_repeated_components_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreateEntityPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          components_.Add(other.components_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
              case 18: {
                components_.AddEntriesFrom(input, _repeated_components_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdateEntityPacket : pb::IMessage<UpdateEntityPacket> {
        private static readonly pb::MessageParser<UpdateEntityPacket> _parser = new pb::MessageParser<UpdateEntityPacket>(() => new UpdateEntityPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateEntityPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateEntityPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateEntityPacket(UpdateEntityPacket other) : this() {
          entityId_ = other.entityId_;
          components_ = other.components_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateEntityPacket Clone() {
          return new UpdateEntityPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        /// <summary>Field number for the "components" field.</summary>
        public const int ComponentsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Erutan.Scripts.Protos.Component> _repeated_components_codec
            = pb::FieldCodec.ForMessage(18, global::Erutan.Scripts.Protos.Component.Parser);
        private readonly pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> components_ = new pbc::RepeatedField<global::Erutan.Scripts.Protos.Component>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> Components {
          get { return components_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateEntityPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateEntityPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if(!components_.Equals(other.components_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          hash ^= components_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          components_.WriteTo(output, _repeated_components_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          size += components_.CalculateSize(_repeated_components_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateEntityPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          components_.Add(other.components_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
              case 18: {
                components_.AddEntriesFrom(input, _repeated_components_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdatePositionPacket : pb::IMessage<UpdatePositionPacket> {
        private static readonly pb::MessageParser<UpdatePositionPacket> _parser = new pb::MessageParser<UpdatePositionPacket>(() => new UpdatePositionPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdatePositionPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket(UpdatePositionPacket other) : this() {
          entityId_ = other.entityId_;
          position_ = other.position_ != null ? other.position_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket Clone() {
          return new UpdatePositionPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetVector3 position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetVector3 Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdatePositionPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdatePositionPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if (!object.Equals(Position, other.Position)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          if (position_ != null) hash ^= Position.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          if (position_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Position);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          if (position_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdatePositionPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          if (other.position_ != null) {
            if (position_ == null) {
              Position = new global::Erutan.Scripts.Protos.NetVector3();
            }
            Position.MergeFrom(other.Position);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
              case 18: {
                if (position_ == null) {
                  Position = new global::Erutan.Scripts.Protos.NetVector3();
                }
                input.ReadMessage(Position);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdateRotationPacket : pb::IMessage<UpdateRotationPacket> {
        private static readonly pb::MessageParser<UpdateRotationPacket> _parser = new pb::MessageParser<UpdateRotationPacket>(() => new UpdateRotationPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateRotationPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket(UpdateRotationPacket other) : this() {
          entityId_ = other.entityId_;
          rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket Clone() {
          return new UpdateRotationPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        /// <summary>Field number for the "rotation" field.</summary>
        public const int RotationFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetQuaternion rotation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetQuaternion Rotation {
          get { return rotation_; }
          set {
            rotation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateRotationPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateRotationPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if (!object.Equals(Rotation, other.Rotation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          if (rotation_ != null) hash ^= Rotation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          if (rotation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rotation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          if (rotation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateRotationPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          if (other.rotation_ != null) {
            if (rotation_ == null) {
              Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
            }
            Rotation.MergeFrom(other.Rotation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
              case 18: {
                if (rotation_ == null) {
                  Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
                }
                input.ReadMessage(Rotation);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DestroyEntityPacket : pb::IMessage<DestroyEntityPacket> {
        private static readonly pb::MessageParser<DestroyEntityPacket> _parser = new pb::MessageParser<DestroyEntityPacket>(() => new DestroyEntityPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DestroyEntityPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyEntityPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyEntityPacket(DestroyEntityPacket other) : this() {
          entityId_ = other.entityId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyEntityPacket Clone() {
          return new DestroyEntityPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DestroyEntityPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DestroyEntityPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DestroyEntityPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Maybe will have more params later
      /// </summary>
      public sealed partial class UpdateAnimalPacket : pb::IMessage<UpdateAnimalPacket> {
        private static readonly pb::MessageParser<UpdateAnimalPacket> _parser = new pb::MessageParser<UpdateAnimalPacket>(() => new UpdateAnimalPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateAnimalPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateAnimalPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateAnimalPacket(UpdateAnimalPacket other) : this() {
          entityId_ = other.entityId_;
          life_ = other.life_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateAnimalPacket Clone() {
          return new UpdateAnimalPacket(this);
        }

        /// <summary>Field number for the "entity_id" field.</summary>
        public const int EntityIdFieldNumber = 1;
        private ulong entityId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong EntityId {
          get { return entityId_; }
          set {
            entityId_ = value;
          }
        }

        /// <summary>Field number for the "life" field.</summary>
        public const int LifeFieldNumber = 2;
        private double life_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Life {
          get { return life_; }
          set {
            life_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateAnimalPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateAnimalPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EntityId != other.EntityId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Life, other.Life)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EntityId != 0UL) hash ^= EntityId.GetHashCode();
          if (Life != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Life);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (EntityId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(EntityId);
          }
          if (Life != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Life);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EntityId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EntityId);
          }
          if (Life != 0D) {
            size += 1 + 8;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateAnimalPacket other) {
          if (other == null) {
            return;
          }
          if (other.EntityId != 0UL) {
            EntityId = other.EntityId;
          }
          if (other.Life != 0D) {
            Life = other.Life;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EntityId = input.ReadUInt64();
                break;
              }
              case 17: {
                Life = input.ReadDouble();
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdateParametersPacket : pb::IMessage<UpdateParametersPacket> {
        private static readonly pb::MessageParser<UpdateParametersPacket> _parser = new pb::MessageParser<UpdateParametersPacket>(() => new UpdateParametersPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateParametersPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateParametersPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateParametersPacket(UpdateParametersPacket other) : this() {
          parameters_ = other.parameters_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateParametersPacket Clone() {
          return new UpdateParametersPacket(this);
        }

        /// <summary>Field number for the "parameters" field.</summary>
        public const int ParametersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter> _repeated_parameters_codec
            = pb::FieldCodec.ForMessage(10, global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter.Parser);
        private readonly pbc::RepeatedField<global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter> parameters_ = new pbc::RepeatedField<global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Types.Parameter> Parameters {
          get { return parameters_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateParametersPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateParametersPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!parameters_.Equals(other.parameters_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= parameters_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          parameters_.WriteTo(output, _repeated_parameters_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += parameters_.CalculateSize(_repeated_parameters_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateParametersPacket other) {
          if (other == null) {
            return;
          }
          parameters_.Add(other.parameters_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the UpdateParametersPacket message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Parameter : pb::IMessage<Parameter> {
            private static readonly pb::MessageParser<Parameter> _parser = new pb::MessageParser<Parameter>(() => new Parameter());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Parameter> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Erutan.Scripts.Protos.Packet.Types.UpdateParametersPacket.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter(Parameter other) : this() {
              switch (other.TypeCase) {
                case TypeOneofCase.TimeScale:
                  TimeScale = other.TimeScale;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Parameter Clone() {
              return new Parameter(this);
            }

            /// <summary>Field number for the "time_scale" field.</summary>
            public const int TimeScaleFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double TimeScale {
              get { return typeCase_ == TypeOneofCase.TimeScale ? (double) type_ : 0D; }
              set {
                type_ = value;
                typeCase_ = TypeOneofCase.TimeScale;
              }
            }

            private object type_;
            /// <summary>Enum of possible cases for the "type" oneof.</summary>
            public enum TypeOneofCase {
              None = 0,
              TimeScale = 1,
            }
            private TypeOneofCase typeCase_ = TypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TypeOneofCase TypeCase {
              get { return typeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearType() {
              typeCase_ = TypeOneofCase.None;
              type_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Parameter);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Parameter other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeScale, other.TimeScale)) return false;
              if (TypeCase != other.TypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (typeCase_ == TypeOneofCase.TimeScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeScale);
              hash ^= (int) typeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (typeCase_ == TypeOneofCase.TimeScale) {
                output.WriteRawTag(9);
                output.WriteDouble(TimeScale);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (typeCase_ == TypeOneofCase.TimeScale) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Parameter other) {
              if (other == null) {
                return;
              }
              switch (other.TypeCase) {
                case TypeOneofCase.TimeScale:
                  TimeScale = other.TimeScale;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 9: {
                    TimeScale = input.ReadDouble();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
