// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: realtime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Erutan.Scripts.Protos {

  /// <summary>Holder for reflection information generated from realtime.proto</summary>
  public static partial class RealtimeReflection {

    #region Descriptor
    /// <summary>File descriptor for realtime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RealtimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5yZWFsdGltZS5wcm90bxIGZXJ1dGFuGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIjkKCE1ldGFkYXRhEi0KCXRpbWVzdGFtcBgBIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiLQoKTmV0VmVjdG9yMxIJCgF4",
            "GAEgASgBEgkKAXkYAiABKAESCQoBehgDIAEoASI7Cg1OZXRRdWF0ZXJuaW9u",
            "EgkKAXgYASABKAESCQoBeRgCIAEoARIJCgF6GAMgASgBEgkKAXcYBCABKAEi",
            "mQIKCU5ldE9iamVjdBIRCglvYmplY3RfaWQYASABKAkSEAoIb3duZXJfaWQY",
            "AiABKAkSJAoIcG9zaXRpb24YAyABKAsyEi5lcnV0YW4uTmV0VmVjdG9yMxIn",
            "Cghyb3RhdGlvbhgEIAEoCzIVLmVydXRhbi5OZXRRdWF0ZXJuaW9uEiEKBXNj",
            "YWxlGAUgASgLMhIuZXJ1dGFuLk5ldFZlY3RvcjMSJAoEdHlwZRgGIAEoDjIW",
            "LmVydXRhbi5OZXRPYmplY3QuVHlwZRIlCgpjb21wb25lbnRzGAcgAygLMhEu",
            "ZXJ1dGFuLkNvbXBvbmVudCIoCgRUeXBlEgoKBkFOSU1BTBAAEggKBEZPT0QQ",
            "ARIKCgZHUk9VTkQQAiK3AgoJQ29tcG9uZW50EjMKBmFuaW1hbBgBIAEoCzIh",
            "LmVydXRhbi5Db21wb25lbnQuQW5pbWFsQ29tcG9uZW50SAASLwoEZm9vZBgC",
            "IAEoCzIfLmVydXRhbi5Db21wb25lbnQuRm9vZENvbXBvbmVudEgAEjMKBmdy",
            "b3VuZBgDIAEoCzIhLmVydXRhbi5Db21wb25lbnQuR3JvdW5kQ29tcG9uZW50",
            "SAAaYwoPQW5pbWFsQ29tcG9uZW50EgwKBGxpZmUYASABKAESHwoEZm9vZBgC",
            "IAEoCzIRLmVydXRhbi5OZXRPYmplY3QSIQoGdGFyZ2V0GAMgASgLMhEuZXJ1",
            "dGFuLk5ldE9iamVjdBoPCg1Gb29kQ29tcG9uZW50GhEKD0dyb3VuZENvbXBv",
            "bmVudEIGCgR0eXBlIrYECgZQYWNrZXQSIgoIbWV0YWRhdGEYASABKAsyEC5l",
            "cnV0YW4uTWV0YWRhdGESOgoNY3JlYXRlX29iamVjdBgCIAEoCzIhLmVydXRh",
            "bi5QYWNrZXQuQ3JlYXRlT2JqZWN0UGFja2V0SAASPgoPdXBkYXRlX3Bvc2l0",
            "aW9uGAMgASgLMiMuZXJ1dGFuLlBhY2tldC5VcGRhdGVQb3NpdGlvblBhY2tl",
            "dEgAEj4KD3VwZGF0ZV9yb3RhdGlvbhgEIAEoCzIjLmVydXRhbi5QYWNrZXQu",
            "VXBkYXRlUm90YXRpb25QYWNrZXRIABI8Cg5kZXN0cm95X29iamVjdBgFIAEo",
            "CzIiLmVydXRhbi5QYWNrZXQuRGVzdHJveU9iamVjdFBhY2tldEgAGjcKEkNy",
            "ZWF0ZU9iamVjdFBhY2tldBIhCgZvYmplY3QYASABKAsyES5lcnV0YW4uTmV0",
            "T2JqZWN0Gk8KFFVwZGF0ZVBvc2l0aW9uUGFja2V0EhEKCW9iamVjdF9pZBgB",
            "IAEoCRIkCghwb3NpdGlvbhgCIAEoCzISLmVydXRhbi5OZXRWZWN0b3IzGlIK",
            "FFVwZGF0ZVJvdGF0aW9uUGFja2V0EhEKCW9iamVjdF9pZBgBIAEoCRInCghy",
            "b3RhdGlvbhgCIAEoCzIVLmVydXRhbi5OZXRRdWF0ZXJuaW9uGigKE0Rlc3Ry",
            "b3lPYmplY3RQYWNrZXQSEQoJb2JqZWN0X2lkGAEgASgJQgYKBHR5cGUyOAoG",
            "RXJ1dGFuEi4KBlN0cmVhbRIOLmVydXRhbi5QYWNrZXQaDi5lcnV0YW4uUGFj",
            "a2V0IgAoATABQi4KCmNvbS5lcnV0YW5CBkVydXRhblABqgIVRXJ1dGFuLlNj",
            "cmlwdHMuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Metadata), global::Erutan.Scripts.Protos.Metadata.Parser, new[]{ "Timestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetVector3), global::Erutan.Scripts.Protos.NetVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetQuaternion), global::Erutan.Scripts.Protos.NetQuaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.NetObject), global::Erutan.Scripts.Protos.NetObject.Parser, new[]{ "ObjectId", "OwnerId", "Position", "Rotation", "Scale", "Type", "Components" }, null, new[]{ typeof(global::Erutan.Scripts.Protos.NetObject.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component), global::Erutan.Scripts.Protos.Component.Parser, new[]{ "Animal", "Food", "Ground" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.AnimalComponent), global::Erutan.Scripts.Protos.Component.Types.AnimalComponent.Parser, new[]{ "Life", "Food", "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.FoodComponent), global::Erutan.Scripts.Protos.Component.Types.FoodComponent.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Component.Types.GroundComponent), global::Erutan.Scripts.Protos.Component.Types.GroundComponent.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet), global::Erutan.Scripts.Protos.Packet.Parser, new[]{ "Metadata", "CreateObject", "UpdatePosition", "UpdateRotation", "DestroyObject" }, new[]{ "Type" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket), global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket.Parser, new[]{ "Object" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket.Parser, new[]{ "ObjectId", "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket), global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket.Parser, new[]{ "ObjectId", "Rotation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket), global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket.Parser, new[]{ "ObjectId" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Metadata : pb::IMessage<Metadata> {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata(Metadata other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetVector3 : pb::IMessage<NetVector3> {
    private static readonly pb::MessageParser<NetVector3> _parser = new pb::MessageParser<NetVector3>(() => new NetVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3(NetVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetVector3 Clone() {
      return new NetVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetQuaternion : pb::IMessage<NetQuaternion> {
    private static readonly pb::MessageParser<NetQuaternion> _parser = new pb::MessageParser<NetQuaternion>(() => new NetQuaternion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetQuaternion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion(NetQuaternion other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetQuaternion Clone() {
      return new NetQuaternion(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private double z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private double w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetQuaternion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetQuaternion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
      if (W != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Y);
      }
      if (Z != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Z);
      }
      if (W != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (Z != 0D) {
        size += 1 + 8;
      }
      if (W != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetQuaternion other) {
      if (other == null) {
        return;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      if (other.Z != 0D) {
        Z = other.Z;
      }
      if (other.W != 0D) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            X = input.ReadDouble();
            break;
          }
          case 17: {
            Y = input.ReadDouble();
            break;
          }
          case 25: {
            Z = input.ReadDouble();
            break;
          }
          case 33: {
            W = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TODO: parent ...
  /// </summary>
  public sealed partial class NetObject : pb::IMessage<NetObject> {
    private static readonly pb::MessageParser<NetObject> _parser = new pb::MessageParser<NetObject>(() => new NetObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetObject(NetObject other) : this() {
      objectId_ = other.objectId_;
      ownerId_ = other.ownerId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      type_ = other.type_;
      components_ = other.components_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetObject Clone() {
      return new NetObject(this);
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private string objectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ObjectId {
      get { return objectId_; }
      set {
        objectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner_id" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Erutan.Scripts.Protos.NetVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.NetVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 4;
    private global::Erutan.Scripts.Protos.NetQuaternion rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.NetQuaternion Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 5;
    private global::Erutan.Scripts.Protos.NetVector3 scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.NetVector3 Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private global::Erutan.Scripts.Protos.NetObject.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.NetObject.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Erutan.Scripts.Protos.Component> _repeated_components_codec
        = pb::FieldCodec.ForMessage(58, global::Erutan.Scripts.Protos.Component.Parser);
    private readonly pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> components_ = new pbc::RepeatedField<global::Erutan.Scripts.Protos.Component>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Erutan.Scripts.Protos.Component> Components {
      get { return components_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (OwnerId != other.OwnerId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      if (Type != other.Type) return false;
      if(!components_.Equals(other.components_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectId.Length != 0) hash ^= ObjectId.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= components_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ObjectId);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Scale);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      components_.WriteTo(output, _repeated_components_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectId);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetObject other) {
      if (other == null) {
        return;
      }
      if (other.ObjectId.Length != 0) {
        ObjectId = other.ObjectId;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Erutan.Scripts.Protos.NetVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          Scale = new global::Erutan.Scripts.Protos.NetVector3();
        }
        Scale.MergeFrom(other.Scale);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      components_.Add(other.components_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ObjectId = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Erutan.Scripts.Protos.NetVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            if (rotation_ == null) {
              Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 42: {
            if (scale_ == null) {
              Scale = new global::Erutan.Scripts.Protos.NetVector3();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 48: {
            Type = (global::Erutan.Scripts.Protos.NetObject.Types.Type) input.ReadEnum();
            break;
          }
          case 58: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NetObject message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("ANIMAL")] Animal = 0,
        [pbr::OriginalName("FOOD")] Food = 1,
        [pbr::OriginalName("GROUND")] Ground = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Data-oriented design like
  /// </summary>
  public sealed partial class Component : pb::IMessage<Component> {
    private static readonly pb::MessageParser<Component> _parser = new pb::MessageParser<Component>(() => new Component());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Component> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component(Component other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.Animal:
          Animal = other.Animal.Clone();
          break;
        case TypeOneofCase.Food:
          Food = other.Food.Clone();
          break;
        case TypeOneofCase.Ground:
          Ground = other.Ground.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Component Clone() {
      return new Component(this);
    }

    /// <summary>Field number for the "animal" field.</summary>
    public const int AnimalFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.AnimalComponent Animal {
      get { return typeCase_ == TypeOneofCase.Animal ? (global::Erutan.Scripts.Protos.Component.Types.AnimalComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Animal;
      }
    }

    /// <summary>Field number for the "food" field.</summary>
    public const int FoodFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.FoodComponent Food {
      get { return typeCase_ == TypeOneofCase.Food ? (global::Erutan.Scripts.Protos.Component.Types.FoodComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Food;
      }
    }

    /// <summary>Field number for the "ground" field.</summary>
    public const int GroundFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Component.Types.GroundComponent Ground {
      get { return typeCase_ == TypeOneofCase.Ground ? (global::Erutan.Scripts.Protos.Component.Types.GroundComponent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Ground;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Animal = 1,
      Food = 2,
      Ground = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Component);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Component other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Animal, other.Animal)) return false;
      if (!object.Equals(Food, other.Food)) return false;
      if (!object.Equals(Ground, other.Ground)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.Animal) hash ^= Animal.GetHashCode();
      if (typeCase_ == TypeOneofCase.Food) hash ^= Food.GetHashCode();
      if (typeCase_ == TypeOneofCase.Ground) hash ^= Ground.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.Animal) {
        output.WriteRawTag(10);
        output.WriteMessage(Animal);
      }
      if (typeCase_ == TypeOneofCase.Food) {
        output.WriteRawTag(18);
        output.WriteMessage(Food);
      }
      if (typeCase_ == TypeOneofCase.Ground) {
        output.WriteRawTag(26);
        output.WriteMessage(Ground);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.Animal) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Animal);
      }
      if (typeCase_ == TypeOneofCase.Food) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Food);
      }
      if (typeCase_ == TypeOneofCase.Ground) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ground);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Component other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Animal:
          if (Animal == null) {
            Animal = new global::Erutan.Scripts.Protos.Component.Types.AnimalComponent();
          }
          Animal.MergeFrom(other.Animal);
          break;
        case TypeOneofCase.Food:
          if (Food == null) {
            Food = new global::Erutan.Scripts.Protos.Component.Types.FoodComponent();
          }
          Food.MergeFrom(other.Food);
          break;
        case TypeOneofCase.Ground:
          if (Ground == null) {
            Ground = new global::Erutan.Scripts.Protos.Component.Types.GroundComponent();
          }
          Ground.MergeFrom(other.Ground);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Erutan.Scripts.Protos.Component.Types.AnimalComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.AnimalComponent();
            if (typeCase_ == TypeOneofCase.Animal) {
              subBuilder.MergeFrom(Animal);
            }
            input.ReadMessage(subBuilder);
            Animal = subBuilder;
            break;
          }
          case 18: {
            global::Erutan.Scripts.Protos.Component.Types.FoodComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.FoodComponent();
            if (typeCase_ == TypeOneofCase.Food) {
              subBuilder.MergeFrom(Food);
            }
            input.ReadMessage(subBuilder);
            Food = subBuilder;
            break;
          }
          case 26: {
            global::Erutan.Scripts.Protos.Component.Types.GroundComponent subBuilder = new global::Erutan.Scripts.Protos.Component.Types.GroundComponent();
            if (typeCase_ == TypeOneofCase.Ground) {
              subBuilder.MergeFrom(Ground);
            }
            input.ReadMessage(subBuilder);
            Ground = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Component message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class AnimalComponent : pb::IMessage<AnimalComponent> {
        private static readonly pb::MessageParser<AnimalComponent> _parser = new pb::MessageParser<AnimalComponent>(() => new AnimalComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AnimalComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnimalComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnimalComponent(AnimalComponent other) : this() {
          life_ = other.life_;
          food_ = other.food_ != null ? other.food_.Clone() : null;
          target_ = other.target_ != null ? other.target_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AnimalComponent Clone() {
          return new AnimalComponent(this);
        }

        /// <summary>Field number for the "life" field.</summary>
        public const int LifeFieldNumber = 1;
        private double life_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Life {
          get { return life_; }
          set {
            life_ = value;
          }
        }

        /// <summary>Field number for the "food" field.</summary>
        public const int FoodFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetObject food_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetObject Food {
          get { return food_; }
          set {
            food_ = value;
          }
        }

        /// <summary>Field number for the "target" field.</summary>
        public const int TargetFieldNumber = 3;
        private global::Erutan.Scripts.Protos.NetObject target_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetObject Target {
          get { return target_; }
          set {
            target_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AnimalComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AnimalComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Life, other.Life)) return false;
          if (!object.Equals(Food, other.Food)) return false;
          if (!object.Equals(Target, other.Target)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Life != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Life);
          if (food_ != null) hash ^= Food.GetHashCode();
          if (target_ != null) hash ^= Target.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Life != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Life);
          }
          if (food_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Food);
          }
          if (target_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Target);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Life != 0D) {
            size += 1 + 8;
          }
          if (food_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Food);
          }
          if (target_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AnimalComponent other) {
          if (other == null) {
            return;
          }
          if (other.Life != 0D) {
            Life = other.Life;
          }
          if (other.food_ != null) {
            if (food_ == null) {
              Food = new global::Erutan.Scripts.Protos.NetObject();
            }
            Food.MergeFrom(other.Food);
          }
          if (other.target_ != null) {
            if (target_ == null) {
              Target = new global::Erutan.Scripts.Protos.NetObject();
            }
            Target.MergeFrom(other.Target);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Life = input.ReadDouble();
                break;
              }
              case 18: {
                if (food_ == null) {
                  Food = new global::Erutan.Scripts.Protos.NetObject();
                }
                input.ReadMessage(Food);
                break;
              }
              case 26: {
                if (target_ == null) {
                  Target = new global::Erutan.Scripts.Protos.NetObject();
                }
                input.ReadMessage(Target);
                break;
              }
            }
          }
        }

      }

      public sealed partial class FoodComponent : pb::IMessage<FoodComponent> {
        private static readonly pb::MessageParser<FoodComponent> _parser = new pb::MessageParser<FoodComponent>(() => new FoodComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FoodComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FoodComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FoodComponent(FoodComponent other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FoodComponent Clone() {
          return new FoodComponent(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FoodComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FoodComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FoodComponent other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      public sealed partial class GroundComponent : pb::IMessage<GroundComponent> {
        private static readonly pb::MessageParser<GroundComponent> _parser = new pb::MessageParser<GroundComponent>(() => new GroundComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GroundComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Component.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroundComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroundComponent(GroundComponent other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GroundComponent Clone() {
          return new GroundComponent(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GroundComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GroundComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GroundComponent other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Packet : pb::IMessage<Packet> {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Erutan.Scripts.Protos.RealtimeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.CreateObject:
          CreateObject = other.CreateObject.Clone();
          break;
        case TypeOneofCase.UpdatePosition:
          UpdatePosition = other.UpdatePosition.Clone();
          break;
        case TypeOneofCase.UpdateRotation:
          UpdateRotation = other.UpdateRotation.Clone();
          break;
        case TypeOneofCase.DestroyObject:
          DestroyObject = other.DestroyObject.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private global::Erutan.Scripts.Protos.Metadata metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "create_object" field.</summary>
    public const int CreateObjectFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket CreateObject {
      get { return typeCase_ == TypeOneofCase.CreateObject ? (global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.CreateObject;
      }
    }

    /// <summary>Field number for the "update_position" field.</summary>
    public const int UpdatePositionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket UpdatePosition {
      get { return typeCase_ == TypeOneofCase.UpdatePosition ? (global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdatePosition;
      }
    }

    /// <summary>Field number for the "update_rotation" field.</summary>
    public const int UpdateRotationFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket UpdateRotation {
      get { return typeCase_ == TypeOneofCase.UpdateRotation ? (global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.UpdateRotation;
      }
    }

    /// <summary>Field number for the "destroy_object" field.</summary>
    public const int DestroyObjectFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket DestroyObject {
      get { return typeCase_ == TypeOneofCase.DestroyObject ? (global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DestroyObject;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      CreateObject = 2,
      UpdatePosition = 3,
      UpdateRotation = 4,
      DestroyObject = 5,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (!object.Equals(CreateObject, other.CreateObject)) return false;
      if (!object.Equals(UpdatePosition, other.UpdatePosition)) return false;
      if (!object.Equals(UpdateRotation, other.UpdateRotation)) return false;
      if (!object.Equals(DestroyObject, other.DestroyObject)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (typeCase_ == TypeOneofCase.CreateObject) hash ^= CreateObject.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdatePosition) hash ^= UpdatePosition.GetHashCode();
      if (typeCase_ == TypeOneofCase.UpdateRotation) hash ^= UpdateRotation.GetHashCode();
      if (typeCase_ == TypeOneofCase.DestroyObject) hash ^= DestroyObject.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (metadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Metadata);
      }
      if (typeCase_ == TypeOneofCase.CreateObject) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateObject);
      }
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyObject) {
        output.WriteRawTag(42);
        output.WriteMessage(DestroyObject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (typeCase_ == TypeOneofCase.CreateObject) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateObject);
      }
      if (typeCase_ == TypeOneofCase.UpdatePosition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatePosition);
      }
      if (typeCase_ == TypeOneofCase.UpdateRotation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateRotation);
      }
      if (typeCase_ == TypeOneofCase.DestroyObject) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyObject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Erutan.Scripts.Protos.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.CreateObject:
          if (CreateObject == null) {
            CreateObject = new global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket();
          }
          CreateObject.MergeFrom(other.CreateObject);
          break;
        case TypeOneofCase.UpdatePosition:
          if (UpdatePosition == null) {
            UpdatePosition = new global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket();
          }
          UpdatePosition.MergeFrom(other.UpdatePosition);
          break;
        case TypeOneofCase.UpdateRotation:
          if (UpdateRotation == null) {
            UpdateRotation = new global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket();
          }
          UpdateRotation.MergeFrom(other.UpdateRotation);
          break;
        case TypeOneofCase.DestroyObject:
          if (DestroyObject == null) {
            DestroyObject = new global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket();
          }
          DestroyObject.MergeFrom(other.DestroyObject);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (metadata_ == null) {
              Metadata = new global::Erutan.Scripts.Protos.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 18: {
            global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.CreateObjectPacket();
            if (typeCase_ == TypeOneofCase.CreateObject) {
              subBuilder.MergeFrom(CreateObject);
            }
            input.ReadMessage(subBuilder);
            CreateObject = subBuilder;
            break;
          }
          case 26: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdatePositionPacket();
            if (typeCase_ == TypeOneofCase.UpdatePosition) {
              subBuilder.MergeFrom(UpdatePosition);
            }
            input.ReadMessage(subBuilder);
            UpdatePosition = subBuilder;
            break;
          }
          case 34: {
            global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.UpdateRotationPacket();
            if (typeCase_ == TypeOneofCase.UpdateRotation) {
              subBuilder.MergeFrom(UpdateRotation);
            }
            input.ReadMessage(subBuilder);
            UpdateRotation = subBuilder;
            break;
          }
          case 42: {
            global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket subBuilder = new global::Erutan.Scripts.Protos.Packet.Types.DestroyObjectPacket();
            if (typeCase_ == TypeOneofCase.DestroyObject) {
              subBuilder.MergeFrom(DestroyObject);
            }
            input.ReadMessage(subBuilder);
            DestroyObject = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Packet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CreateObjectPacket : pb::IMessage<CreateObjectPacket> {
        private static readonly pb::MessageParser<CreateObjectPacket> _parser = new pb::MessageParser<CreateObjectPacket>(() => new CreateObjectPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreateObjectPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateObjectPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateObjectPacket(CreateObjectPacket other) : this() {
          object_ = other.object_ != null ? other.object_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreateObjectPacket Clone() {
          return new CreateObjectPacket(this);
        }

        /// <summary>Field number for the "object" field.</summary>
        public const int ObjectFieldNumber = 1;
        private global::Erutan.Scripts.Protos.NetObject object_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetObject Object {
          get { return object_; }
          set {
            object_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreateObjectPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreateObjectPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Object, other.Object)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (object_ != null) hash ^= Object.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (object_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Object);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (object_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreateObjectPacket other) {
          if (other == null) {
            return;
          }
          if (other.object_ != null) {
            if (object_ == null) {
              Object = new global::Erutan.Scripts.Protos.NetObject();
            }
            Object.MergeFrom(other.Object);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (object_ == null) {
                  Object = new global::Erutan.Scripts.Protos.NetObject();
                }
                input.ReadMessage(Object);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdatePositionPacket : pb::IMessage<UpdatePositionPacket> {
        private static readonly pb::MessageParser<UpdatePositionPacket> _parser = new pb::MessageParser<UpdatePositionPacket>(() => new UpdatePositionPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdatePositionPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket(UpdatePositionPacket other) : this() {
          objectId_ = other.objectId_;
          position_ = other.position_ != null ? other.position_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdatePositionPacket Clone() {
          return new UpdatePositionPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private string objectId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ObjectId {
          get { return objectId_; }
          set {
            objectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetVector3 position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetVector3 Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdatePositionPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdatePositionPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          if (!object.Equals(Position, other.Position)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId.Length != 0) hash ^= ObjectId.GetHashCode();
          if (position_ != null) hash ^= Position.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ObjectId);
          }
          if (position_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Position);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectId);
          }
          if (position_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdatePositionPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId.Length != 0) {
            ObjectId = other.ObjectId;
          }
          if (other.position_ != null) {
            if (position_ == null) {
              Position = new global::Erutan.Scripts.Protos.NetVector3();
            }
            Position.MergeFrom(other.Position);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ObjectId = input.ReadString();
                break;
              }
              case 18: {
                if (position_ == null) {
                  Position = new global::Erutan.Scripts.Protos.NetVector3();
                }
                input.ReadMessage(Position);
                break;
              }
            }
          }
        }

      }

      public sealed partial class UpdateRotationPacket : pb::IMessage<UpdateRotationPacket> {
        private static readonly pb::MessageParser<UpdateRotationPacket> _parser = new pb::MessageParser<UpdateRotationPacket>(() => new UpdateRotationPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UpdateRotationPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket(UpdateRotationPacket other) : this() {
          objectId_ = other.objectId_;
          rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UpdateRotationPacket Clone() {
          return new UpdateRotationPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private string objectId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ObjectId {
          get { return objectId_; }
          set {
            objectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rotation" field.</summary>
        public const int RotationFieldNumber = 2;
        private global::Erutan.Scripts.Protos.NetQuaternion rotation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Erutan.Scripts.Protos.NetQuaternion Rotation {
          get { return rotation_; }
          set {
            rotation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UpdateRotationPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UpdateRotationPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          if (!object.Equals(Rotation, other.Rotation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId.Length != 0) hash ^= ObjectId.GetHashCode();
          if (rotation_ != null) hash ^= Rotation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ObjectId);
          }
          if (rotation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Rotation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectId);
          }
          if (rotation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UpdateRotationPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId.Length != 0) {
            ObjectId = other.ObjectId;
          }
          if (other.rotation_ != null) {
            if (rotation_ == null) {
              Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
            }
            Rotation.MergeFrom(other.Rotation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ObjectId = input.ReadString();
                break;
              }
              case 18: {
                if (rotation_ == null) {
                  Rotation = new global::Erutan.Scripts.Protos.NetQuaternion();
                }
                input.ReadMessage(Rotation);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DestroyObjectPacket : pb::IMessage<DestroyObjectPacket> {
        private static readonly pb::MessageParser<DestroyObjectPacket> _parser = new pb::MessageParser<DestroyObjectPacket>(() => new DestroyObjectPacket());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DestroyObjectPacket> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Erutan.Scripts.Protos.Packet.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket(DestroyObjectPacket other) : this() {
          objectId_ = other.objectId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DestroyObjectPacket Clone() {
          return new DestroyObjectPacket(this);
        }

        /// <summary>Field number for the "object_id" field.</summary>
        public const int ObjectIdFieldNumber = 1;
        private string objectId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ObjectId {
          get { return objectId_; }
          set {
            objectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DestroyObjectPacket);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DestroyObjectPacket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ObjectId != other.ObjectId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ObjectId.Length != 0) hash ^= ObjectId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ObjectId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ObjectId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ObjectId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DestroyObjectPacket other) {
          if (other == null) {
            return;
          }
          if (other.ObjectId.Length != 0) {
            ObjectId = other.ObjectId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ObjectId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
